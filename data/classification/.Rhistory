library(RColorBrewer)
#input_dir = '/project/histone_marks_miRNA/histone_marks/logistic_regression/evaluation/'
input_dir = '/Users/Lisa/Dropbox/unser_krams/Work/evaluation/'
cb = brewer.pal(9,'Set1')
#color_plot = c(rep('#6600FF',3),'#37ABC8','#00AA88','#37ABC8','#00AA88','#00AA88','white','white')
#color_label = c(rep('#6600FF',3),'#37ABC8','#00AA88','#37ABC8','#00AA88','#00AA88','black','black')
color_plot = c(rep('#6600FF',2),'#00AA88','#00AA88','white','white')
color_label = c(rep('#6600FF',2),'#00AA88','#00AA88','black','black')
table_log_reg_numbers = read.table(file = paste(input_dir,'Imr90_numbers_combined_logReg_and_regLogReg_class.csv',sep=''),header=T,sep=';')
table_log_reg_numbers = read.table(file = paste(input_dir,'Imr90_numbers_combined_logReg_and_regLogReg_class.csv',sep=''),header=T,sep=';')
library(RColorBrewer)
#input_dir = '/project/histone_marks_miRNA/histone_marks/logistic_regression/evaluation/'
input_dir = '/Users/Lisa/Dropbox/uni/Masterarbeit/results/logistic_regression/evaluation/'
cb = brewer.pal(9,'Set1')
#color_plot = c(rep('#6600FF',3),'#37ABC8','#00AA88','#37ABC8','#00AA88','#00AA88','white','white')
#color_label = c(rep('#6600FF',3),'#37ABC8','#00AA88','#37ABC8','#00AA88','#00AA88','black','black')
color_plot = c(rep('#6600FF',2),'#00AA88','#00AA88','white','white')
color_label = c(rep('#6600FF',2),'#00AA88','#00AA88','black','black')
table_log_reg_numbers = read.table(file = paste(input_dir,'Imr90_numbers_combined_logReg_and_regLogReg_class.csv',sep=''),header=T,sep=';')
AUC = data.frame(x = table_log_reg_numbers$AUC[1:5])
colnames(AUC) = as.character(table_log_reg_numbers$short_name[1])
c = 2
for(i in seq(6,nrow(table_log_reg_numbers),5)){
AUC = cbind(AUC,table_log_reg_numbers$AUC[i:(i+4)])
colnames(AUC)[c] = as.character(table_log_reg_numbers$short_name[i])
c = c+1
}
colnames(AUC)[1] = 'pre-miRNA\n DNA methylation'
colnames(AUC)[2] = 'pre-miRNA\n HM'
colnames(AUC)[3] = 'promoter set 2\n DNA methylation'
colnames(AUC)[4] = 'promoter set 2\n HM'
colnames(AUC)[5] = 'full model'
colnames(AUC)[6] = 'reduced model'
par(mfrow=c(1,1),mar=c(11,4,3,1),oma=c(1,1,0,0))
boxplot(AUC,las=2,col=color_plot,main='AUC of regularized logistic regression model on test set',ylab='AUC (%)',ylim=c(30,95))
means = colMeans(AUC)
text(1:ncol(AUC)+0.4, 93, means, labels = formatC(means, format = "f", digits = 1),pos = 2, cex = 0.9,col = color_label)
ACC = data.frame(x = table_log_reg_numbers$ACC[1:5])
colnames(ACC) = as.character(table_log_reg_numbers$short_name[1])
c = 2
for(i in seq(6,nrow(table_log_reg_numbers),5)){
ACC = cbind(ACC,table_log_reg_numbers$ACC[i:(i+4)])
colnames(ACC)[c] = as.character(table_log_reg_numbers$short_name[i])
c = c+1
}
# colnames(ACC)[1] = 'pre-miRNA\n DNA methylation'
# colnames(ACC)[2] = 'pre-miRNA\n HM'
# colnames(ACC)[3] = 'pre-miRNA\n DNA methylation & HM'
# colnames(ACC)[4] = 'promoter set 1\n DNA methylation'
# colnames(ACC)[5] = 'promoter set 2\n DNA methylation'
# colnames(ACC)[6] = 'promoter set 1\n HM'
# colnames(ACC)[7] = 'promoter set 2\n HM'
# colnames(ACC)[8] = 'promoter set 2\n DNA methylation & HM'
# colnames(ACC)[9] = 'full model'
# colnames(ACC)[10] = 'reduced model'
colnames(ACC)[1] = 'pre-miRNA\n DNA methylation'
colnames(ACC)[2] = 'pre-miRNA\n HM'
colnames(ACC)[3] = 'promoter set 2\n DNA methylation'
colnames(ACC)[4] = 'promoter set 2\n HM'
colnames(ACC)[5] = 'full model'
colnames(ACC)[6] = 'reduced model'
par(mfrow=c(1,1),mar=c(11,4,3,1),oma=c(1,1,0,0))
boxplot(ACC,las=2,col=color,main='Accuracy of regularized logistic regression model on test set',ylab='Accuracy (%)',ylim=c(30,95))
means = colMeans(ACC)
text(1:ncol(ACC)+0.4, 93, means, labels = formatC(means, format = "f", digits = 1),pos = 2, cex = 0.9,col=color_label)
ACC_detail = data.frame(x = table_log_reg_numbers$ACC[1:5], y = table_log_reg_numbers$expreseed[1:5], z = table_log_reg_numbers$Non.expressed[1:5])
colnames(ACC_detail) = c(as.character(table_log_reg_numbers$short_name[1]),'TPR','TNR')
c = 4
for(i in seq(6,nrow(table_log_reg_numbers),5)){
ACC_detail = cbind(ACC_detail,table_log_reg_numbers$ACC[i:(i+4)])
ACC_detail = cbind(ACC_detail,table_log_reg_numbers$expreseed[i:(i+4)])
ACC_detail = cbind(ACC_detail,table_log_reg_numbers$Non.expressed[i:(i+4)])
boxplot(ACC,las=2,col=color,main='Accuracy of regularized logistic regression model on test set',ylab='Accuracy (%)',ylim=c(30,95))
boxplot(ACC,las=2,col=color,main='Accuracy of regularized logistic regression model on test set',ylab='Accuracy (%)',ylim=c(30,95))
)
boxplot(ACC,las=2,col=color,main='Accuracy of regularized logistic regression model on test set',ylab='Accuracy (%)',ylim=c(30,95))
boxplot(ACC,las=2,col=color_plot,main='Accuracy of regularized logistic regression model on test set',ylab='Accuracy (%)',ylim=c(30,95))
means = colMeans(ACC)
text(1:ncol(ACC)+0.4, 93, means, labels = formatC(means, format = "f", digits = 1),pos = 2, cex = 0.9,col=color_label)
ACC_detail = data.frame(x = table_log_reg_numbers$ACC[1:5], y = table_log_reg_numbers$expreseed[1:5], z = table_log_reg_numbers$Non.expressed[1:5])
colnames(ACC_detail) = c(as.character(table_log_reg_numbers$short_name[1]),'TPR','TNR')
c = 4
for(i in seq(6,nrow(table_log_reg_numbers),5)){
ACC_detail = cbind(ACC_detail,table_log_reg_numbers$ACC[i:(i+4)])
ACC_detail = cbind(ACC_detail,table_log_reg_numbers$expreseed[i:(i+4)])
ACC_detail = cbind(ACC_detail,table_log_reg_numbers$Non.expressed[i:(i+4)])
colnames(ACC_detail)[c:(c+2)] = c(as.character(table_log_reg_numbers$short_name[i]),'TPR','TNR')
c = c+3
}
# colnames(ACC_detail)[1] = 'pre-miRNA\n DNA methylation'
# colnames(ACC_detail)[4] = 'pre-miRNA\n HM'
# colnames(ACC_detail)[7] = 'pre-miRNA\n DNA methylation & HM'
# colnames(ACC_detail)[10] = 'promoter set 1\n DNA methylation'
# colnames(ACC_detail)[13] = 'promoter set 2\n DNA methylation'
# colnames(ACC_detail)[16] = 'promoter set 1\n HM'
# colnames(ACC_detail)[19] = 'promoter set 2\n HM'
# colnames(ACC_detail)[22] = 'promoter set 2\n DNA methylation & HM'
# colnames(ACC_detail)[25] = 'full model'
# colnames(ACC_detail)[28] = 'reduced model'
colnames(ACC_detail)[1] = 'pre-miRNA\n DNA methylation'
colnames(ACC_detail)[4] = 'pre-miRNA\n HM'
colnames(ACC_detail)[7] = 'promoter set 2\n DNA methylation'
colnames(ACC_detail)[10] = 'promoter set 2\n HM'
colnames(ACC_detail)[13] = 'full model'
colnames(ACC_detail)[16] = 'reduced model'
color = c()
cbi = 1
for(i in 1:(ncol(ACC_detail)/3)){
#if(i == 10){
#  cbi = 1
#}
color = append(color,rep(color_plot[cbi],3))
cbi = cbi + 1
}
color2 = c()
cbi = 1
for(i in 1:(ncol(ACC_detail)/3)){
#if(i == 10){
#  cbi = 1
#}
color2 = append(color2,rep(color_label[cbi],3))
cbi = cbi + 1
}
par(mfrow=c(1,1),mar=c(11,4,3,1),oma=c(1,1,0,0))
boxplot(ACC_detail,las=2,col=color,main='Accuracy of regularized logistic regression model on test set',ylab='Accuracy (%)',ylim=c(30,95))
means = colMeans(ACC_detail)
text(1:ncol(ACC_detail)+0.5, rep(c(93,92,91),(ncol(ACC_detail/3))), means, labels = formatC(means, format = "f", digits = 1),pos = 2, cex = 0.7,col=color2)
library(RColorBrewer)
#input_dir = '/project/histone_marks_miRNA/histone_marks/logistic_regression/evaluation/'
input_dir = '/Users/Lisa/Dropbox/uni/Masterarbeit/results/logistic_regression/evaluation/'
cb = brewer.pal(9,'Set1')
#color_plot = c(rep('#6600FF',3),'#37ABC8','#00AA88','#37ABC8','#00AA88','#00AA88','white','white')
#color_label = c(rep('#6600FF',3),'#37ABC8','#00AA88','#37ABC8','#00AA88','#00AA88','black','black')
color_plot = c(rep('#6600FF',2),'#00AA88','#00AA88','white','white')
color_label = c(rep('#6600FF',2),'#00AA88','#00AA88','black','black')
table_log_reg_numbers = read.table(file = paste(input_dir,'Imr90_numbers_combined_logReg_and_regLogReg_class.csv',sep=''),header=T,sep=';')
AUC = data.frame(x = table_log_reg_numbers$AUC[1:5])
colnames(AUC) = as.character(table_log_reg_numbers$short_name[1])
c = 2
for(i in seq(6,nrow(table_log_reg_numbers),5)){
AUC = cbind(AUC,table_log_reg_numbers$AUC[i:(i+4)])
colnames(AUC)[c] = as.character(table_log_reg_numbers$short_name[i])
c = c+1
}
# colnames(AUC)[1] = 'pre-miRNA\n DNA methylation'
# colnames(AUC)[2] = 'pre-miRNA\n HM'
# colnames(AUC)[3] = 'pre-miRNA\n DNA methylation & HM'
# colnames(AUC)[4] = 'promoter set 1\n DNA methylation'
# colnames(AUC)[5] = 'promoter set 2\n DNA methylation'
# colnames(AUC)[6] = 'promoter set 1\n HM'
# colnames(AUC)[7] = 'promoter set 2\n HM'
# colnames(AUC)[8] = 'promoter set 2\n DNA methylation & HM'
# colnames(AUC)[9] = 'full model'
# colnames(AUC)[10] = 'reduced model'
colnames(AUC)[1] = 'pre-miRNA\n DNA methylation'
colnames(AUC)[2] = 'pre-miRNA\n HM'
colnames(AUC)[3] = 'promoter set 2\n DNA methylation'
colnames(AUC)[4] = 'promoter set 2\n HM'
colnames(AUC)[5] = 'full model'
colnames(AUC)[6] = 'reduced model'
pdf(paste(input_dir,'eval_comb_reg_log_reg.pdf',sep=''))
par(mfrow=c(1,1),mar=c(11,4,3,1),oma=c(1,1,0,0))
boxplot(AUC,las=2,col=color_plot,main='AUC of regularized logistic regression model on test set',ylab='AUC (%)',ylim=c(30,95))
means = colMeans(AUC)
text(1:ncol(AUC)+0.4, 93, means, labels = formatC(means, format = "f", digits = 1),pos = 2, cex = 0.9,col = color_label)
ACC = data.frame(x = table_log_reg_numbers$ACC[1:5])
colnames(ACC) = as.character(table_log_reg_numbers$short_name[1])
c = 2
for(i in seq(6,nrow(table_log_reg_numbers),5)){
ACC = cbind(ACC,table_log_reg_numbers$ACC[i:(i+4)])
colnames(ACC)[c] = as.character(table_log_reg_numbers$short_name[i])
c = c+1
}
# colnames(ACC)[1] = 'pre-miRNA\n DNA methylation'
# colnames(ACC)[2] = 'pre-miRNA\n HM'
# colnames(ACC)[3] = 'pre-miRNA\n DNA methylation & HM'
# colnames(ACC)[4] = 'promoter set 1\n DNA methylation'
# colnames(ACC)[5] = 'promoter set 2\n DNA methylation'
# colnames(ACC)[6] = 'promoter set 1\n HM'
# colnames(ACC)[7] = 'promoter set 2\n HM'
# colnames(ACC)[8] = 'promoter set 2\n DNA methylation & HM'
# colnames(ACC)[9] = 'full model'
# colnames(ACC)[10] = 'reduced model'
colnames(ACC)[1] = 'pre-miRNA\n DNA methylation'
colnames(ACC)[2] = 'pre-miRNA\n HM'
colnames(ACC)[3] = 'promoter set 2\n DNA methylation'
colnames(ACC)[4] = 'promoter set 2\n HM'
colnames(ACC)[5] = 'full model'
colnames(ACC)[6] = 'reduced model'
par(mfrow=c(1,1),mar=c(11,4,3,1),oma=c(1,1,0,0))
boxplot(ACC,las=2,col=color_plot,main='Accuracy of regularized logistic regression model on test set',ylab='Accuracy (%)',ylim=c(30,95))
means = colMeans(ACC)
text(1:ncol(ACC)+0.4, 93, means, labels = formatC(means, format = "f", digits = 1),pos = 2, cex = 0.9,col=color_label)
ACC_detail = data.frame(x = table_log_reg_numbers$ACC[1:5], y = table_log_reg_numbers$expreseed[1:5], z = table_log_reg_numbers$Non.expressed[1:5])
colnames(ACC_detail) = c(as.character(table_log_reg_numbers$short_name[1]),'TPR','TNR')
c = 4
for(i in seq(6,nrow(table_log_reg_numbers),5)){
ACC_detail = cbind(ACC_detail,table_log_reg_numbers$ACC[i:(i+4)])
ACC_detail = cbind(ACC_detail,table_log_reg_numbers$expreseed[i:(i+4)])
ACC_detail = cbind(ACC_detail,table_log_reg_numbers$Non.expressed[i:(i+4)])
colnames(ACC_detail)[c:(c+2)] = c(as.character(table_log_reg_numbers$short_name[i]),'TPR','TNR')
c = c+3
}
# colnames(ACC_detail)[1] = 'pre-miRNA\n DNA methylation'
# colnames(ACC_detail)[4] = 'pre-miRNA\n HM'
# colnames(ACC_detail)[7] = 'pre-miRNA\n DNA methylation & HM'
# colnames(ACC_detail)[10] = 'promoter set 1\n DNA methylation'
# colnames(ACC_detail)[13] = 'promoter set 2\n DNA methylation'
# colnames(ACC_detail)[16] = 'promoter set 1\n HM'
# colnames(ACC_detail)[19] = 'promoter set 2\n HM'
# colnames(ACC_detail)[22] = 'promoter set 2\n DNA methylation & HM'
# colnames(ACC_detail)[25] = 'full model'
# colnames(ACC_detail)[28] = 'reduced model'
colnames(ACC_detail)[1] = 'pre-miRNA\n DNA methylation'
colnames(ACC_detail)[4] = 'pre-miRNA\n HM'
colnames(ACC_detail)[7] = 'promoter set 2\n DNA methylation'
colnames(ACC_detail)[10] = 'promoter set 2\n HM'
colnames(ACC_detail)[13] = 'full model'
colnames(ACC_detail)[16] = 'reduced model'
color = c()
cbi = 1
for(i in 1:(ncol(ACC_detail)/3)){
#if(i == 10){
#  cbi = 1
#}
color = append(color,rep(color_plot[cbi],3))
cbi = cbi + 1
}
color2 = c()
cbi = 1
for(i in 1:(ncol(ACC_detail)/3)){
#if(i == 10){
#  cbi = 1
#}
color2 = append(color2,rep(color_label[cbi],3))
cbi = cbi + 1
}
par(mfrow=c(1,1),mar=c(11,4,3,1),oma=c(1,1,0,0))
boxplot(ACC_detail,las=2,col=color,main='Accuracy of regularized logistic regression model on test set',ylab='Accuracy (%)',ylim=c(30,95))
means = colMeans(ACC_detail)
text(1:ncol(ACC_detail)+0.5, rep(c(93,92,91),(ncol(ACC_detail/3))), means, labels = formatC(means, format = "f", digits = 1),pos = 2, cex = 0.7,col=color2)
dev.off()
